---
# tasks file for node-exporter
- name: check_if_node_exporter_exist
  stat:
    path: "{{ node-exporter-bin }}"
  register: check_node_exporter_present

- debug:
    var: check_node_exporter_present
- name: create node exporter user
  user:
    name: "{{ node-exporter-user }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: create node exporter config dir
  file:
    path: "{{ node-exporter-dir-conf }}"
    state: directory
    owner: "{{ node-exporter-user }}"
    group: "{{ node-exporter-group }}"

- name: if node exporter exist get version
  shell: "cat /etc/systemd/system/node-exporter.service | grep Version | sed s/'.*Version '//g"
  when: check_node_exporter_present.stat.exists == true
  changed_when: false
  register: __get_node-exporter-version
  
- name: download and unzip node exporter if not exist
  unarchive:
    src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node-exporter-version }}/node-exporter-{{ node-exporter-version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
    validate_certs: no

- name: move the binary to the final destination
  copy:
    src: "/tmp/node-exporter-{{ node-exporter-version }}.linux-amd64/node-exporter"
    dest: "{{ node-exporter-bin }}"
    owner: "{{ node-exporter-user }}"
    group: "{{ node-exporter-group }}"
    mode: 0755
    remote_src: yes
  when: check_node_exporter_present.stat.exists == false or not __get_node-exporter-version.stdout == node-exporter-version

- name: clean
  file:
    path: /tmp/node-exporter-{{ node-exporter-version }}.linux-amd64/
    state: absent

- name: install service
  template:
    src: node-exporter.service.j2
    dest: /etc/systemd/system/node-exporter.service
    owner: root
    group: root
    mode: 0755
  notify: reload-daemon-and-restart-node-exporter
- meta: flush_handlers

- name: service always started
  systemd:
    name: node-exporter
    state: started
    enabled: yes
...